on: pull_request
name: PR Checks
jobs:
  dockerfilelint:
    name: dockerfile lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - name: hadolint
      uses: burdzwastaken/hadolint-action@1.9.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HADOLINT_ACTION_DOCKERFILE_FOLDER: .

  dockerbuild:
    name: docker build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - name: check out submodule
      run: git submodule sync --recursive && git submodule update --init --recursive
    - name: extract tag
      id: vars
      run: echo ::set-output name=argo_version::$(date -u '+%Y.%m.%d')
    - name: docker build
      run: docker build . --file Dockerfile --tag image:${{ steps.vars.outputs.argo_version }}
    - name: save docker image for cache
      run: mkdir -p image/ && docker save -o image/image.tar image:${{ steps.vars.outputs.argo_version }}
    - name: cache docker image
      uses: actions/cache@v2
      with:
        path: image/
        key: ${{ runner.os }}-docker-${{ github.sha }}

  dockerscan:
    name: docker security scan
    runs-on: ubuntu-latest
    needs: dockerbuild
    steps:
    - uses: actions/checkout@v2.3.4
    - name: load cached docker image
      uses: actions/cache@v2
      with:
        path: image/
        key: ${{ runner.os }}-docker-${{ github.sha }}
    - name: cached scan db
      uses: actions/cache@v2
      with:
        path: vulndb/
        key: trivy-vulndb
    - name: Install Trivy
      run:  |
        trivyRelease="$(curl -s "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | cut -d 'v' -f 2)"
        wget https://github.com/aquasecurity/trivy/releases/download/v${trivyRelease}/trivy_${trivyRelease}_Linux-64bit.tar.gz
        tar zxvf trivy_${trivyRelease}_Linux-64bit.tar.gz
    - name: Scan
      # --vuln-type library is necessary since the default is os,library and this doesn't work with scratch images
      run: ./trivy --vuln-type library --exit-code 1 --no-progress --severity HIGH,CRITICAL,MEDIUM --cache-dir vulndb/ --input image/image.tar

